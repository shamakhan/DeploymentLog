{"version":3,"sources":["components/DeploymentForm/constants.tsx","store/deployments/types.ts","store/deployments/actions.ts","components/DeploymentForm/index.tsx","constants.tsx","components/DeploymentList/index.tsx","components/Header/index.tsx","store/templates/types.ts","store/templates/actions.ts","App.tsx","store/deployments/reducer.ts","store/templates/reducer.ts","store/index.tsx","index.tsx","../../node_modules/validatorjs/src/lang sync /^/.//.*$"],"names":["rules","url","templateName","version","validate","formData","validation","Validator","passes","valid","errors","LOAD_DEPLOYMENTS","DEPLOYMENT_ADDED","fetchingDeployments","type","loadDeployments","deployments","failedFetchingDeployments","error","deletingDeployment","deploymentId","deploymentDeleted","failedToDeleteDeployment","DeploymentForm","useState","setUrl","templateOptions","setTemplateOptions","setTemplateName","versionOptions","setVersionOptions","setVersion","useSelector","state","templatesLoading","get","templates","Map","adding","dispatch","useDispatch","useEffect","templateNames","Object","keys","toJS","availableVersions","List","urlRef","useRef","setErrors","handleSubmit","evt","a","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","status","toast","message","deployment","data","hasOwnProperty","current","focus","className","Form","onSubmit","FormGroup","row","Label","for","sm","md","Col","Input","invalid","placeholder","innerRef","name","value","onChange","target","FormFeedback","Row","form","map","template","key","Button","disabled","color","DeploymentList","loading","list","showDeleteModal","setConfirmationModal","deleting","setDeleting","toggleConfirmation","prevDeletingRef","Table","striped","bordered","colSpan","size","Date","toUTCString","onClick","setTimeout","Modal","isOpen","toggle","centered","ModalBody","ModalFooter","id","Error","Header","LOAD_TEMPLATES","fetchingTemplates","loadTemplates","failedFetchingTemplates","App","getState","initialState","fromJS","rootReducer","combineReducers","action","set","update","unshift","filter","reduce","acc","versions","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.0204cc74.chunk.js","sourcesContent":["import Validator from 'validatorjs';\nimport { IDeploymentInput } from \"../../interfaces/IDeployment\";\n\nconst rules = {\n  url: \"required|string|min:8|url\",\n  templateName: \"required|string\",\n  version: \"required|string\"\n};\n\nexport const validate = (formData: IDeploymentInput) => {\n  const validation = new Validator(formData, rules);\n  if (validation.passes()) {\n    return {valid: true};\n  }\n  return { valid: false, errors: validation.errors };\n}","import { List, Map } from \"immutable\"\nimport { IDeployment } from \"../../interfaces/IDeployment\"\n\nexport const FETCHING_DEPLOYMENTS = \"app/deployments/FETCHING_DEPLOYMENTS\"\nexport const LOAD_DEPLOYMENTS = \"app/deployments/LOAD_DEPLOYMENTS\"\nexport const FAILED_TO_FETCH_DEPLOYMENTS =\n  \"app/deployments/FAILED_TO_FETCH_DEPLOYMENTS\"\n\nexport const ADDING_DEPLOYMENT = \"app/deployments/ADDING_DEPLOYMENT\"\nexport const DEPLOYMENT_ADDED = \"app/deployments/DEPLOYMENT_ADDED\"\nexport const FAILED_TO_ADD_DEPLOYMENT =\n  \"app/deployments/FAILED_TO_ADD_DEPLOYMENT\"\n\nexport const DELETING_DEPLOYMENT = \"app/deployments/DELETING_DEPLOYMENT\"\nexport const DEPLOYMENT_DELETED = \"app/deployments/DEPLOYMENT_DELETED\"\nexport const FAILED_TO_DELETE_DEPLOYMENT =\n  \"app/deployments/FAILED_TO_DELETE_DEPLOYMENT\"\n\ninterface FetchingDeploymentsAction {\n  type: typeof FETCHING_DEPLOYMENTS\n}\n\ninterface LoadDeploymentsAction {\n  type: typeof LOAD_DEPLOYMENTS\n  deployments: IDeployment[]\n}\n\ninterface FailedDeploymentsAction {\n  type: typeof FAILED_TO_FETCH_DEPLOYMENTS\n  error: Error\n}\n  \ninterface AddingDeployment {\n  type: typeof ADDING_DEPLOYMENT\n}\n\ninterface DeploymentAdded {\n  type: typeof DEPLOYMENT_ADDED\n  deployment: IDeployment\n}\n\ninterface FailedToAddDeployment {\n  type: typeof FAILED_TO_ADD_DEPLOYMENT\n}\n\ninterface DeletingDeployment {\n  type: typeof DELETING_DEPLOYMENT,\n  deploymentId: String\n}\n\ninterface DeploymentDeleted {\n  type: typeof DEPLOYMENT_DELETED\n}\n\ninterface FailedToDeleteDeployment {\n  type: typeof FAILED_TO_DELETE_DEPLOYMENT\n}\n\nexport type DeploymentActionTypes =\n  | FetchingDeploymentsAction\n  | LoadDeploymentsAction\n  | AddingDeployment\n  | FailedDeploymentsAction\n  | DeploymentAdded\n  | FailedToAddDeployment\n  | DeletingDeployment\n  | DeploymentDeleted\n  | FailedToDeleteDeployment\n\nexport interface DeploymentState extends Map<String, any> {\n  list: List<IDeployment>,\n  loading: Boolean,\n  errors: String,\n  adding: Boolean,\n  deletingDeployment: String | null,\n}\n","import { IDeployment } from \"../../interfaces/IDeployment\";\nimport { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { RootState } from \"../index\";\nimport { API_ROOT } from \"../../constants\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  FETCHING_DEPLOYMENTS,\n  LOAD_DEPLOYMENTS,\n  FAILED_TO_FETCH_DEPLOYMENTS,\n  ADDING_DEPLOYMENT,\n  DEPLOYMENT_ADDED,\n  DeploymentActionTypes,\n  FAILED_TO_ADD_DEPLOYMENT,\n  DELETING_DEPLOYMENT,\n  DEPLOYMENT_DELETED,\n  FAILED_TO_DELETE_DEPLOYMENT\n} from \"./types\";\n\n\nexport const fetchDeployments = (): ThunkAction<void, RootState, unknown, Action<string>> => \n  async (dispatch) => {\n    dispatch(fetchingDeployments());\n    try {\n      const response = await fetch(`${API_ROOT}/api/deployments`);\n      const data = await response.json();\n      dispatch(loadDeployments(data.deployments));\n    } catch (e) {\n      toast(e.message);\n      dispatch(failedFetchingDeployments(e));\n    }\n  };\n\n\nexport const fetchingDeployments = () : DeploymentActionTypes => {\n  return {\n    type: FETCHING_DEPLOYMENTS,\n  }\n};\n\nexport const loadDeployments = (deployments: IDeployment[]) : DeploymentActionTypes => {\n  return {\n    type: LOAD_DEPLOYMENTS,\n    deployments\n  }\n}\n\nexport const failedFetchingDeployments = (error: Error) : DeploymentActionTypes => {\n  return {\n    type: FAILED_TO_FETCH_DEPLOYMENTS,\n    error\n  }\n}\n\nexport const addingDeployment = () : DeploymentActionTypes => {\n  return {\n    type: ADDING_DEPLOYMENT,\n  }\n};\n\nexport const deploymentAdded = (deployment: IDeployment) : DeploymentActionTypes => {\n  return {\n    type: DEPLOYMENT_ADDED,\n    deployment\n  }\n}\n\nexport const failedToAddDeployment = () : DeploymentActionTypes => {\n  return {\n    type: FAILED_TO_ADD_DEPLOYMENT,\n  }\n}\n\nexport const deleteDeployment = (id: String): ThunkAction<void, RootState, unknown, Action<string>> => \n  async (dispatch) => {\n    dispatch(deletingDeployment(id));\n    try {\n      const response = await fetch(`${API_ROOT}/api/deployments/${id}`, { method: \"DELETE\" });\n      const data = await response.json();\n      if (data.status === \"SUCCESS\") {\n        dispatch(deploymentDeleted());\n      } else {\n        throw new Error(data.message);\n      }\n    } catch (e) {\n      toast(e.message);\n      dispatch(failedToDeleteDeployment());\n    }\n  };\n\nexport const deletingDeployment = (deploymentId: String) : DeploymentActionTypes => {\n  return {\n    type: DELETING_DEPLOYMENT,\n    deploymentId\n  }\n};\n\nexport const deploymentDeleted = () : DeploymentActionTypes => {\n  return {\n    type: DEPLOYMENT_DELETED,\n  }\n}\n\nexport const failedToDeleteDeployment = () : DeploymentActionTypes => {\n  return {\n    type: FAILED_TO_DELETE_DEPLOYMENT,\n  }\n}\n\n\n\n","import React, { useState, useRef, FormEvent, useEffect } from 'react';\nimport { validate } from \"./constants\";\nimport { toast } from \"react-toastify\";\nimport { Button, Form, FormGroup, Label, Input, Col, FormFeedback, Row } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from \"../../store\";\nimport { API_ROOT } from \"../../constants\";\nimport \"./style.scss\";\nimport { List, Map } from 'immutable';\nimport { addingDeployment, deploymentAdded, failedToAddDeployment } from \"../../store/deployments/actions\";\n\nfunction DeploymentForm() {\n  const [url, setUrl] = useState(\"\");\n  \n  const [templateOptions, setTemplateOptions] = useState<string[]>([]);\n  const [templateName, setTemplateName] = useState(\"\");\n  \n  const [versionOptions, setVersionOptions] = useState<string[]>([]);\n  const [version, setVersion] = useState(\"\");\n\n  const { templatesLoading, templates, adding } = useSelector((state: RootState) => ({\n    templatesLoading: state.deployments.get('loading'),\n    templates: state.templates.get('list', Map()),\n    adding: state.deployments.get('adding', false),\n  }));\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const templateNames = Object.keys((templates || Map()).toJS());\n    setTemplateOptions(() => templateNames);\n    setTemplateName(() => templateNames[0]);\n  }, [templates]);\n\n  useEffect(() => {\n    const availableVersions = templates.get(templateName, List()).toJS();\n    setVersionOptions(() => availableVersions);\n    setVersion(() => availableVersions[0]);\n  }, [templateName])\n\n  const urlRef = useRef<HTMLInputElement>(null);\n\n  const [errors, setErrors] = useState({ url: \"\" });\n\n  const resetFields = () => {\n    setUrl(\"\");\n    setTemplateName(templateOptions[0]);\n    setVersion(versionOptions[0]);\n  }\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const formData = { url, templateName, version };\n    const validation = validate(formData);\n    if (validation.valid) {\n      setErrors(() => ({ url: \"\" }));\n      dispatch(addingDeployment());\n      try {\n        const response = await fetch(`${API_ROOT}/api/deployments`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        const json = await response.json();\n        if (response.status !== 200) {\n          toast(json.message);\n        } else {\n          if (json.status === \"SUCCESS\") {\n            toast(\"Deployment added successfully!\");\n            dispatch(deploymentAdded(json.data));\n            resetFields();\n          } else {\n            toast(json.message);\n            dispatch(failedToAddDeployment());\n          }\n        }\n      } catch (e) {\n        dispatch(failedToAddDeployment());\n      }\n    } else {\n      // @ts-ignore\n      setErrors(() => validation.errors.errors);\n      if (validation.errors && validation.errors.hasOwnProperty('url')) {\n        if (urlRef.current !== null) {\n          urlRef.current.focus();\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"deployment-form col-lg-9\">\n      <Form onSubmit={handleSubmit}>\n        <FormGroup row>\n          <Label for=\"url\" sm={3} md={2}>URL</Label>\n          <Col sm={9} md={10}>\n            <Input type=\"text\" invalid={errors && !!errors.url} placeholder=\"Enter URL\" innerRef={urlRef} name=\"url\" value={url} onChange={(evt) => setUrl(evt.target.value)} />\n            <FormFeedback>{errors.url}</FormFeedback>\n          </Col>\n        </FormGroup>\n        <Row form>\n          <Col md={8}>\n            <FormGroup row>\n              <Label for=\"templateName\" sm={3} md={3}>Template Name</Label>\n              <Col sm={9} md={8}>\n                <Input type=\"select\" name=\"templateName\" value={templateName} onChange={(evt) => setTemplateName(evt.target.value)} >\n                  {templateOptions.map((template: string) => (\n                    <option key={template}>{template}</option>\n                  ))}\n                </Input>\n              </Col>\n            </FormGroup>\n          </Col>\n          <Col md={4}>\n            <FormGroup row>\n              <Label for=\"version\" sm={3}>Version</Label>\n              <Col sm={9}>\n                <Input type=\"select\" name=\"version\" value={version} onChange={(evt) => setVersion(evt.target.value)} >\n                  {versionOptions.map((version: string) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                </Input>\n              </Col>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Button type=\"submit\" disabled={adding} color=\"info\">\n          {adding ? (<div className=\"loader\"></div>) : \"Add\"}\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default DeploymentForm;\n","export const API_ROOT = \"\";","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table, Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { RootState } from \"../../store\";\nimport { deleteDeployment } from \"../../store/deployments/actions\";\nimport \"./style.scss\";\nimport { Map } from 'immutable';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { IDeployment } from '../../interfaces/IDeployment';\n\nfunction DeploymentList() {\n  const { loading, list } = useSelector((state: RootState) => ({\n    loading: state.deployments.get('loading'),\n    list: state.deployments.get('list')\n  }));\n\n  const [showDeleteModal, setConfirmationModal] = useState(false);\n  const [deleting, setDeleting] = useState<string>(\"\");\n  \n  const deletingDeployment = useSelector((state: RootState) =>  state.deployments.get('deletingDeployment'));\n\n  const toggleConfirmation = () => {\n    if (!showDeleteModal) {\n      setDeleting(\"\");\n    }\n    setConfirmationModal(!showDeleteModal);\n  }\n\n  const prevDeletingRef = useRef();\n\n  useEffect(() => {\n    if (deleting && !deletingDeployment && prevDeletingRef.current !== deletingDeployment && showDeleteModal) {\n      toggleConfirmation();\n    }\n    prevDeletingRef.current = deletingDeployment;\n  }, [deletingDeployment, deleting])\n\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    if (deleting) {\n      dispatch(deleteDeployment(deleting))\n    }\n  }\n\n  return (\n    <div className=\"deployment-list col-lg-9\">\n      <Table striped bordered>\n        <thead>\n          <tr>\n            <th>URL</th>\n            <th>Template Name</th>\n            <th>Version</th>\n            <th>DeployedAt</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {loading && <tr><td colSpan={5}><div className=\"loader\"></div></td></tr>}\n          {!loading && list.size === 0 && <tr><td colSpan={5} className=\"text-center\">No records found.</td></tr>}\n          {!loading && list.size !== 0 && list.map((deployment: Map<String, any>) => (<tr key={deployment.get('_id')}>\n          <td>{deployment.get('url')}</td>\n          <td>{deployment.get('templateName')}</td>\n          <td>{deployment.get('version')}</td>\n          <td>{(new Date(deployment.get('deployedAt'))).toUTCString()}</td>\n          <td>\n            <DeleteIcon className=\"delete-icon\" onClick={() => {  toggleConfirmation(); setTimeout(() => setDeleting(() => deployment.get(\"_id\")), 500); } } />\n          </td>\n          </tr>))}\n        </tbody>\n      </Table>\n      <Modal isOpen={showDeleteModal} toggle={toggleConfirmation} centered>\n        {/* <ModalHeader toggle={toggleConfirmation}>Modal title</ModalHeader> */}\n        <ModalBody>\n          Are you sure you want to delete this deployment ?\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" disabled={deletingDeployment} onClick={handleDelete}>\n            {deletingDeployment ? (<div className=\"loader\"></div>) : \"Confirm\"}\n          </Button>{' '}\n          <Button color=\"secondary\" disabled={deletingDeployment} onClick={toggleConfirmation}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DeploymentList;\n","import React from 'react';\nimport \"./style.scss\";\n\nfunction Header() {\n  return (\n    <div className=\"app-header\">\n      <header>Deployment Version Logs</header>\n    </div>\n  );\n}\n\nexport default Header;\n","import { List, Map } from \"immutable\"\nimport { ITemplate } from \"../../interfaces/ITemplate\"\n\nexport const FETCH_TEMPLATES = \"app/deployments/FETCH_TEMPLATES\"\nexport const FETCHING_TEMPLATES = \"app/deployments/FETCHING_TEMPLATES\"\nexport const LOAD_TEMPLATES = \"app/deployments/LOAD_TEMPLATES\"\nexport const FAILED_TO_FETCH_TEMPLATES =\n  \"app/deployments/FAILED_TO_FETCH_TEMPLATES\"\n\ninterface FetchTemplatesAction {\n  type: typeof FETCH_TEMPLATES\n}\n\ninterface FetchingTemplatesAction {\n  type: typeof FETCHING_TEMPLATES\n}\n    \ninterface LoadTemplatesAction {\n  type: typeof LOAD_TEMPLATES\n  templates: ITemplate[]\n}\n\ninterface FailedTemplatesAction {\n  type: typeof FAILED_TO_FETCH_TEMPLATES\n  error: Error\n}\n\nexport type TemplateActionTypes = FetchTemplatesAction | FetchingTemplatesAction | LoadTemplatesAction | FailedTemplatesAction;\n\nexport interface TemplateState extends Map<String, any> {\n  list: List<ITemplate>,\n  loading: Boolean,\n  errors: String,\n};\n","import { ITemplate } from \"../../interfaces/ITemplate\";\nimport { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { RootState } from \"../index\";\nimport { API_ROOT } from \"../../constants\";\n\nimport {\n  FETCHING_TEMPLATES,\n  LOAD_TEMPLATES,\n  FAILED_TO_FETCH_TEMPLATES,\n  TemplateActionTypes\n} from \"./types\";\n\nexport const fetchTemplates = (): ThunkAction<void, RootState, unknown, Action<string>> => \n  async (dispatch, getState) => {\n    dispatch(fetchingTemplates());\n    try {\n      const response = await fetch(`${API_ROOT}/api/templates`);\n      const data = await response.json();\n      dispatch(loadTemplates(data.templates));\n    } catch (e) {\n      dispatch(failedFetchingTemplates(e));\n    }\n  };\n\nexport const fetchingTemplates = () : TemplateActionTypes => {\n  return {\n    type: FETCHING_TEMPLATES,\n  }\n};\n\nexport const loadTemplates = (templates: ITemplate[]) : TemplateActionTypes => {\n  return {\n    type: LOAD_TEMPLATES,\n    templates\n  }\n}\n\nexport const failedFetchingTemplates = (error: Error) : TemplateActionTypes => {\n  return {\n    type: FAILED_TO_FETCH_TEMPLATES,\n    error\n  }\n}\n","import React, { useEffect } from 'react';\nimport DeploymentForm from \"./components/DeploymentForm\";\nimport DeploymentList from \"./components/DeploymentList\";\nimport Header from \"./components/Header\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch } from 'react-redux';\nimport { fetchTemplates } from \"./store/templates/actions\";\nimport { fetchDeployments } from \"./store/deployments/actions\";\nimport './App.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTemplates());\n    dispatch(fetchDeployments());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <ToastContainer />\n      <DeploymentForm />\n      <DeploymentList />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  FETCHING_DEPLOYMENTS,\n  LOAD_DEPLOYMENTS,\n  FAILED_TO_FETCH_DEPLOYMENTS,\n  ADDING_DEPLOYMENT,\n  DEPLOYMENT_ADDED,\n  FAILED_TO_ADD_DEPLOYMENT,\n  DELETING_DEPLOYMENT,\n  DEPLOYMENT_DELETED,\n  FAILED_TO_DELETE_DEPLOYMENT,\n  DeploymentState,\n  DeploymentActionTypes,\n} from \"./types\";\nimport { fromJS } from \"immutable\";\n\nconst initialState: DeploymentState = fromJS({\n  list: [],\n  loading: true,\n  error: \"\",\n  adding: false,\n  deletingDeployment: null \n})\n\nexport default function deploymentReducer(state = initialState, action: DeploymentActionTypes): DeploymentState {\n  switch(action.type) {\n    case FETCHING_DEPLOYMENTS: {\n      return state.set('loading', true)\n        .set('error', \"\");\n    }\n    case LOAD_DEPLOYMENTS: {\n      return state.set('loading', false)\n        .set('list', fromJS(action.deployments));\n    }\n    case FAILED_TO_FETCH_DEPLOYMENTS: {\n      return state.set('loading', false)\n        .set('error', action.error.message);\n    }\n    case ADDING_DEPLOYMENT: {\n      return state.set('adding', true);\n    }\n    case DEPLOYMENT_ADDED: {\n      return state.set('adding', false)\n        .update('list', (deployments) => deployments.unshift(fromJS(action.deployment)));\n    }\n    case FAILED_TO_ADD_DEPLOYMENT: {\n      return state.set('adding', false);\n    }\n    case DELETING_DEPLOYMENT: {\n      return state.set('deletingDeployment', action.deploymentId);\n    }\n    case DEPLOYMENT_DELETED: {\n      const deploymentId = state.get('deletingDeployment');\n      return state.set('deletingDeployment', null)\n        .update('list', (deployments) => deployments.filter((deployment: any) => deployment.get('_id') !== deploymentId));\n    }\n    case FAILED_TO_DELETE_DEPLOYMENT: {\n      return state.set('deletingDeployment', null);\n    }\n    default:\n      return state;\n  }\n}","import {\n  FETCHING_TEMPLATES,\n  LOAD_TEMPLATES,\n  FAILED_TO_FETCH_TEMPLATES,\n  TemplateActionTypes,\n  TemplateState\n} from \"./types\";\nimport { fromJS } from \"immutable\";\n\nconst initialState: TemplateState = fromJS({\n  list: [],\n  loading: true,\n  error: \"\",\n})\n\nexport default function deploymentReducer(state = initialState, action: TemplateActionTypes): TemplateState {\n  switch(action.type) {\n    case FETCHING_TEMPLATES: {\n      return state.set('loading', true)\n        .set('error', \"\");\n    }\n    case LOAD_TEMPLATES: {\n      return state.set('loading', false)\n        .set('list', fromJS(action.templates.reduce((acc, template) => {\n          // @ts-ignore\n          acc[template.name] = template.versions;\n          return acc;\n        }, {})));\n    }\n    case FAILED_TO_FETCH_TEMPLATES: {\n      return state.set('loading', false)\n        .set('error', action.error.message);\n    }\n    default:\n      return state;\n  }\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport deployments from \"./deployments/reducer\";\nimport templates from \"./templates/reducer\";\n\ndeclare global {\n  interface Window { __REDUX_DEVTOOLS_EXTENSION__ : any }\n}\n\nconst rootReducer = combineReducers({\n  deployments,\n  templates,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    // process.env.NODE_ENV === 'development' ?  (window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) : null\n  )\n)\n\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./store\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","var map = {\n\t\"./ar\": 26,\n\t\"./ar.js\": 26,\n\t\"./az\": 27,\n\t\"./az.js\": 27,\n\t\"./be\": 28,\n\t\"./be.js\": 28,\n\t\"./bg\": 29,\n\t\"./bg.js\": 29,\n\t\"./bs\": 30,\n\t\"./bs.js\": 30,\n\t\"./ca\": 31,\n\t\"./ca.js\": 31,\n\t\"./cs\": 32,\n\t\"./cs.js\": 32,\n\t\"./cy\": 33,\n\t\"./cy.js\": 33,\n\t\"./da\": 34,\n\t\"./da.js\": 34,\n\t\"./de\": 35,\n\t\"./de.js\": 35,\n\t\"./el\": 36,\n\t\"./el.js\": 36,\n\t\"./en\": 20,\n\t\"./en.js\": 20,\n\t\"./es\": 37,\n\t\"./es.js\": 37,\n\t\"./et\": 38,\n\t\"./et.js\": 38,\n\t\"./eu\": 39,\n\t\"./eu.js\": 39,\n\t\"./fa\": 40,\n\t\"./fa.js\": 40,\n\t\"./fi\": 41,\n\t\"./fi.js\": 41,\n\t\"./fr\": 42,\n\t\"./fr.js\": 42,\n\t\"./hr\": 43,\n\t\"./hr.js\": 43,\n\t\"./hu\": 44,\n\t\"./hu.js\": 44,\n\t\"./id\": 45,\n\t\"./id.js\": 45,\n\t\"./it\": 46,\n\t\"./it.js\": 46,\n\t\"./ja\": 47,\n\t\"./ja.js\": 47,\n\t\"./ka\": 48,\n\t\"./ka.js\": 48,\n\t\"./ko\": 49,\n\t\"./ko.js\": 49,\n\t\"./lt\": 50,\n\t\"./lt.js\": 50,\n\t\"./lv\": 51,\n\t\"./lv.js\": 51,\n\t\"./mk\": 52,\n\t\"./mk.js\": 52,\n\t\"./mn\": 53,\n\t\"./mn.js\": 53,\n\t\"./ms\": 54,\n\t\"./ms.js\": 54,\n\t\"./nb_NO\": 55,\n\t\"./nb_NO.js\": 55,\n\t\"./nl\": 56,\n\t\"./nl.js\": 56,\n\t\"./pl\": 57,\n\t\"./pl.js\": 57,\n\t\"./pt\": 58,\n\t\"./pt.js\": 58,\n\t\"./pt_BR\": 59,\n\t\"./pt_BR.js\": 59,\n\t\"./ro\": 60,\n\t\"./ro.js\": 60,\n\t\"./ru\": 61,\n\t\"./ru.js\": 61,\n\t\"./se\": 62,\n\t\"./se.js\": 62,\n\t\"./sl\": 63,\n\t\"./sl.js\": 63,\n\t\"./sq\": 64,\n\t\"./sq.js\": 64,\n\t\"./sr\": 65,\n\t\"./sr.js\": 65,\n\t\"./sv\": 66,\n\t\"./sv.js\": 66,\n\t\"./tr\": 67,\n\t\"./tr.js\": 67,\n\t\"./ua\": 68,\n\t\"./ua.js\": 68,\n\t\"./uk\": 69,\n\t\"./uk.js\": 69,\n\t\"./vi\": 70,\n\t\"./vi.js\": 70,\n\t\"./zh\": 71,\n\t\"./zh.js\": 71,\n\t\"./zh_TW\": 72,\n\t\"./zh_TW.js\": 72\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 98;"],"sourceRoot":""}